#summary Configuration of dbmigrate

= Introduction =

If you need to understand the configuration details of a database migration project, this side is for you. Mostly you just add new up-.sql files or up-.groovy scripts in the scripts directory without the need to edit the configurations. You can download *dbmigrate-example-dist.zip* which is a completly preconfigured example project.

If you check out the sources from SVN, you can refer to the *test cases* for the classes you need to give you some some hints about features and usage. The !JavaDoc of dbmigrate might be useful as well.

Some of the classes in dbmigrate have a startable *main()* method. They should print a usage description to the console when invoked with inadequate parameters.

= Usage !AutoMigrationTool =
!AutoMigrationTool is a class with a main()-method. You need the JDBC driver and some jars (refer to lib directory in dbmigrate-example-dist.zip) in the classpath.

{{{
Don't forget to create a backup of your database before using the migration tool!
}}}

_usage: java com.agimatec.dbmigrate.!AutoMigrationTool -help -sim true|yes|false -conf conf/migration.xml_

|| Parameter  || Description || 
|| -sim || -sim true: simulation mode ON. no scripts will be executed. the logger only prints the script names that the programm would  execute. This is for testing what will happen. -sim false: simulation mode OFF (default). Caution: this is the real migration mode that could modify the database. || 
|| -conf || default = -conf migration.xml. Name of the main configuration file to use. || 
|| -help || show help only || 


= Main configuration file =
  * [DBMigrateConfigFile Main configuration file...]
  * [DBMigrateJdbcConfig JdbcConfig]
  * [DBMigrateSqlScript SQL scripts]
  * [DBMigrateXmlScript XML scripts]
  * [DBMigrateGroovyScript groovy scripts]