#summary annotation based code generation framework

= Introduction =

"annomark" is a tool that combines [http://annogen.codehaus.org/ "annogen"] and [http://freemarker.sourceforge.net/ "freemarker"]. This combination allows to process your classes with your annotations without the need for low-level java-programming with the annogen and freemarker APIs.
You just annotate your classes (with predefined or own annotations) and use one of the predefined freemarker templates (or create your own templates) to generate one or more output files. 
With the templates already provided, you can:
  * generate POJOs as Transfer-Objects (template: java-pojo.ftl)
  * generate [http://dozer.sourceforge.net/documentation/gettingstarted.html Dozer]-Mappings for the Transfer-Objects (template: dozer-mapping.ftl)
  * generate xml-beaninfos for the [http://code.google.com/p/agimatec-validation/ agimatec-validation framework] from javax.persistence annotations. 

_*Hint:* the entity classes with javax.persistence-annotations can be generated 
with the CatalogGeneratorTool from your sql schema (template ejb3-prototype.ftl)._

Create your own templates, e.g. for struts-validation from your Form-Classes, for WSDL from your classes, GUI layouts, documentation, Interfaces, business-rules and constraints . If appreciate your ideas and input to enhance "annomark".

= Annomark =
  * [http://www.agimatec.de/agimatec-tools/site/annomark/apidocs/index.html JavaDoc ]
  * [http://www.agimatec.de/agimatec-tools/site/annomark/index.html Maven-Site]
  * [AnnomarkExample Getting started example]

= Other Tools contained in annomark.jar =

== NLS (manage resource bundles) == 

Some [http://ant.apache.org/ ant]-tasks. You can use them with ant or maven2 (with maven-antrun-plugin).

  * [http://www.agimatec.de/agimatec-tools/site/annomark/apidocs/com/agimatec/tools/nls/MessageBundleTask.html  MessageBundleTask]
  * [http://www.agimatec.de/agimatec-tools/site/annomark/apidocs/com/agimatec/tools/nls/Property2XMLConverterTask.html Property2XMLConverterTask]
  * [http://www.agimatec.de/agimatec-tools/site/annomark/apidocs/com/agimatec/tools/nls/MergeLocaleTask.html MergeLocaleTask]
  * [http://www.agimatec.de/agimatec-tools/site/annomark/apidocs/com/agimatec/tools/nls/AddLocaleTask.html AddLocaleTask]

== Example ==

This demonstrates the use of the NLS Tasks from within a maven2 pom.xml:

{{{
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate bundles</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>
                <taskdef name="addLocale"
                         classname="com.agimatec.tools.nls.AddLocaleTask">
                  <classpath refid="maven.test.classpath"/>
                </taskdef>

                <addLocale
                    fromXML="src/main/bundles/CustomerForm.xml"
                    locales="de_DE"
                    toXML="src/main/bundles/CustomerForm_de_DE.xml"/>

                <taskdef name="mergeLocale"
                         classname="com.agimatec.tools.nls.MergeLocaleTask">
                  <classpath refid="maven.test.classpath"/>
                </taskdef>

                <mergeLocale
                    fromXML="src/main/bundles/CustomerForm.xml"
                    xmlWithNewLocale="src/main/bundles/CustomerForm_de_DE_new.xml"
                    locales="da_DK"
                    toXML="src/main/bundles/CustomerForm_de_DE.xml"/>

                <taskdef name="msgbundle"
                         classname="com.agimatec.tools.nls.MessageBundleTask">
                  <classpath refid="maven.test.classpath"/>
                </taskdef>

                <msgbundle overwrite="true" bundles="src/main/bundles/CustomerForm.xml;../base/src/main/bundles/Common.xml"
                           writeProperties="true"
                           writeJson="true"
                           jsonPath="src\main\webapp\js"
                           jsonFile="i18n"
                           propertyPath="src\main\webapp\WEB-INF\classes"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
}}}